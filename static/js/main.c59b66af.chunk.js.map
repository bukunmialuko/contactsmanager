{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layouts/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layouts/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","omDeleteClicked","delete","_this2","_this$props$contact","name","email","phone","info","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","uuid","post","history","push","_this$state2","layouts_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","About","MyComponent","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layouts_Header","Switch","Route","exact","path","component","NotFound","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c59b66af.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'DELETE_CONTACT':\n            return{\n                ...state,\n                contacts: state.contacts.filter(contact =>\n                contact.id !== action.payload)\n            };\n\n        case 'ADD_CONTACT':\n            return{\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            };\n        case 'UPDATE_CONTACT':\n            return{\n                ...state,\n                contacts: state.contacts.map(contact =>\n                contact.id === action.payload.id ? (contact = action.payload) : contact)\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport class Provider extends Component{\n    state = {\n        contacts: [],\n        dispatch: action => {\n            this.setState(state => reducer(state, action))\n        }\n    };\n\n    async componentDidMount() {\n        const res = await (axios.get('https://jsonplaceholder.typicode.com/users'));\n        this.setState({contacts: res.data});\n    }\n\n    render() {\n        return(\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {Consumer} from '../../context';\nimport axios from \"axios\";\n\n\nclass Contact extends Component {\n    state = {\n        showContactInfo: false\n    };\n\n    // for custom methods, use this function style\n    // it handles using the this keyword well\n    // we wont have to use th eo bind this..\n    // so it helps in binding\n    // itr is good for forms\n    onShowClick = () => {\n        this.setState({\n            showContactInfo:\n                !this.state.showContactInfo\n        })\n    };\n\n    omDeleteClicked = async (id, dispatch) => {\n        await (axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`));\n\n        dispatch({type: 'DELETE_CONTACT', payload: id});\n    };\n\n\n    render() {\n        const {id, name, email, phone} = this.props.contact;\n        const {showContactInfo} = this.state;\n\n        const info = (<ul className=\"list-group\">\n            <li className=\"list-group-item\">Email: {email}</li>\n            <li className=\"list-group-item\">Password: {phone}</li>\n        </ul>);\n\n\n        return (\n            <Consumer>\n                {value => {\n                    const {dispatch} = value\n                    return (\n                        <div className=\"card card-body mb-3\">\n                            <h4>{name}\n                                <i onClick={this.onShowClick}\n                                   className=\"fas fa-sort-down\"\n                                   style={{cursor: 'pointer'}}\n                                >\n                                </i>\n                                <i className=\"fas fa-times\"\n                                   style={{\n                                       cursor: 'pointer',\n                                       float: 'right', color: 'red'\n                                   }}\n                                   onClick={this.omDeleteClicked.bind(this, id, dispatch)}\n                                >\n                                </i>\n\n                                <Link to={`contact/edit/${id}`}>\n                                    <i\n                                        className=\"fas fa-pencil-alt\"\n                                        style={{\n                                            cursor: 'pointer',\n                                            float: 'right',\n                                            color: 'black',\n                                            marginRight:'1rem'\n\n                                        }}>\n                                    </i>\n                                </Link>\n                            </h4>\n                            {showContactInfo ? info : null}\n\n                        </div>\n                    )\n                }}\n            </Consumer>\n        );\n    }\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired\n\n};\n\nexport default Contact;","import React, {Component} from 'react';\nimport Contact from './Contact';\nimport {Consumer} from '../../context'\n\nclass Contacts extends Component {\n\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const { contacts } = value;\n                    return (\n                        <React.Fragment>\n                            <h1 className=\"display-4 mb-2\">\n                                <span className=\"text-danger\"> Contact</span> List\n                            </h1>\n                            {contacts.map(contact => (\n                                <Contact\n                                    key={contact.id}\n                                    contact={ contact }\n                                >\n                                </Contact>\n                            ))}\n                        </React.Fragment>\n                    )\n                }}\n            </Consumer>\n        );\n    }\n}\n\nexport default Contacts;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\n\nconst TextInputGroup = ({\n                            label,\n                            name,\n                            value,\n                            placeholder,\n                            type,\n                            onChange,\n                            error\n                        }) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor=\"{name}\">{label}</label>\n            <input\n                type={type}\n                name={name}\n                className={classnames('form-control form-control-lg', {'is-invalid': error})}\n                placeholder={placeholder}\n                value={value}\n                onChange={onChange}/>\n            {error &&  <div className=\"invalid-feedback\">\n                {error}\n            </div>}\n\n        </div>\n    );\n};\n\nTextInputGroup.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string\n\n};\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n};\nexport default TextInputGroup;\n\n","import React, {Component} from 'react';\nimport {Consumer} from \"../../context\";\nimport uuid from \"uuid\";\nimport TextInputGroup from '../layouts/TextInputGroup';\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {name:\"\"}\n\n    };\n\n    onChange = e => this.setState({[e.target.name]: e.target.value});\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n\n        const  {name, email, phone} = this.state;\n\n        //Checking for errors\n        if(name === ''){\n            this.setState({errors: {name: 'Name is required'}});\n            return;\n        }\n        if(email === ''){\n            this.setState({errors: {email: 'Email is required'}});\n            return;\n        }\n        if(phone === ''){\n            this.setState({errors: {phone: 'Phone is required'}});\n            return;\n        }\n\n        const newContact = {\n            id: uuid(),\n            name,\n            email,\n            phone\n        };\n\n        const res = await axios.post(\"https://jsonplaceholder.typicode.com/users\",\n            newContact)\n        dispatch({type:\"ADD_CONTACT\", payload: newContact});\n\n        this.setState({\n            name: \"\",\n            email: \"\",\n            phone: \"\",\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    };\n\n    render() {\n\n        const {name, email, phone, errors} = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const {dispatch} = value;\n\n                    return (\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header bg-dark\">\n                                <h1 className=\"text-white\">Add Contact</h1>\n                            </div>\n\n                            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                <TextInputGroup label=\"Name\" onChange={this.onChange} value={name} placeholder=\"Enter name\" name=\"name\" type=\"text\" error ={errors.name}/>\n                                <TextInputGroup label=\"Email\" onChange={this.onChange} value={email} placeholder=\"Enter email\" name=\"email\" type=\"email\"  error ={errors.email}/>\n                                <TextInputGroup label=\"Phone\" onChange={this.onChange} value={phone} placeholder=\"Enter phone\" name=\"phone\" type=\"text\"  error ={errors.phone}/>\n\n                                <input\n                                    type=\"submit\"\n                                    value=\"Add Contact\"\n                                    className=\"btn btn-dark btn-block\"/>\n                            </form>\n\n\n                        </div>\n                    )\n                }}\n            </Consumer>\n\n        );\n    }\n}\n\nexport default AddContact;","import React, {Component} from 'react';\nimport {Consumer} from \"../../context\";\nimport uuid from \"uuid\";\nimport TextInputGroup from '../layouts/TextInputGroup';\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {name:\"\"}\n    };\n\n    async componentDidMount() {\n        const { id } = this.props.match.params;\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n        const contact = res.data;\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone,\n            }\n        );\n    }\n\n    onChange = e => this.setState({[e.target.name]: e.target.value});\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n\n        const  {name, email, phone} = this.state;\n\n        //Checking for errors\n        if(name === ''){\n            this.setState({errors: {name: 'Name is required'}});\n            return;\n        }\n        if(email === ''){\n            this.setState({errors: {email: 'Email is required'}});\n            return;\n        }\n        if(phone === ''){\n            this.setState({errors: {phone: 'Phone is required'}});\n            return;\n        }\n\n        const updContact = {\n            name,\n            email,\n            phone\n        };\n\n        const {id} = this.props.match.params;\n\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data})\n        this.setState({\n            name: \"\",\n            email: \"\",\n            phone: \"\",\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    };\n\n    render() {\n\n        const {name, email, phone, errors} = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const {dispatch} = value;\n\n                    return (\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header bg-dark\">\n                                <h1 className=\"text-white\">Edit Contact</h1>\n                            </div>\n\n                            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                <TextInputGroup label=\"Name\" onChange={this.onChange} value={name} placeholder=\"Enter name\" name=\"name\" type=\"text\" error ={errors.name}/>\n                                <TextInputGroup label=\"Email\" onChange={this.onChange} value={email} placeholder=\"Enter email\" name=\"email\" type=\"email\"  error ={errors.email}/>\n                                <TextInputGroup label=\"Phone\" onChange={this.onChange} value={phone} placeholder=\"Enter phone\" name=\"phone\" type=\"text\"  error ={errors.phone}/>\n\n                                <input\n                                    type=\"submit\"\n                                    value=\"Update\"\n                                    className=\"btn btn-dark btn-block\"/>\n                            </form>\n\n\n                        </div>\n                    )\n                }}\n            </Consumer>\n\n        );\n    }\n}\n\nexport default EditContact;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n    const {branding} = props;\n    return (\n        <nav className=\"navbar navbar-expand-sm\n        navbar-dark bg-danger mb-3 py-0\">\n            <div className=\"container\">\n                <Link to=\"/\" className=\"navbar-brand\">\n                    {branding}\n                </Link>\n                <div>\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <Link to=\"/\" className=\"nav-link\">\n                                <i className=\"fas fa-home \"></i> Home</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/contact/add\" className=\"nav-link\">\n                                <i className=\"fas fa-plus \"></i>Add</Link>\n                        </li>\n\n                        <li className=\"nav-item\">\n                            <Link to=\"/about\" className=\"nav-link\">\n                                <i className=\"fas fa-question \"></i>About</Link>\n                        </li>\n\n\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nHeader.defaultProps = {\n    branding: \"My App\"\n};\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n};\n\nexport default Header;","import React from 'react';\n\nconst About = props => {\n    return (\n        <div>\n            <h1 className=\"display-4\">\n                {props.match.params.id}</h1>\n            <p className=\"lead\">Simple app for managing contacts</p>\n            <p className=\"text-secondary\">Version 1.0.0</p>\n\n        </div>\n    );\n};\n\nexport default About;\n","import React from 'react';\n\nconst MyComponent = () => {\n    return (\n        <div>\n            <h1 className=\"display-4\">\n                <span className=\"text-danger\">404</span> Page Not Found</h1>\n            <p className=\"lead\">Sorry, that page does not exist</p>\n        </div>\n    );\n};\n\nexport default MyComponent;\n","import React, {Component} from 'react';\n\nclass Test extends Component {\n\n    state = {\n        title: '',\n        body: ''\n    };\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\n            .then(response => response.json())\n            .then(data => this.setState({\n                    title: data.title,\n                    body: data.body\n                })\n            );\n    }\n\n    render() {\n        const {title, body} = this.state\n        return (\n            <div>\n                <h6>{title}</h6>\n                <br/>\n                <h6>{body}</h6>\n\n            </div>\n        );\n    }\n}\n\nexport default Test;","import React, {Component} from 'react';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\n\nimport Header from './components/layouts/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport {Provider} from './context';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// import './App.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider>\n                <Router>\n                    <div className=\"App\">\n                        <Header branding=\"Contact Manager\"/>\n                        <div className=\"container\">\n                            <Switch>\n                                <Route exact path=\"/\" component={Contacts}/>\n                                <Route exact path=\"/about\" component={About}/>\n                                <Route exact path=\"/test\" component={Test}/>\n                                <Route exact path=\"/about/:id\" component={About}/>\n                                <Route exact path=\"/contact/add\" component={AddContact}/>\n                                <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n                                <Route component={NotFound}/>\n                            </Switch>\n                        </div>\n                    </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}